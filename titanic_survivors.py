# -*- coding: utf-8 -*-
"""Titanic_Survivors.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GzkgX9tFb23jzqgqt-3I8XE2X2EBo35Z

<b><h1>TITANIC SURVIVOR ANALYSIS</h1></b>



<h4>A detailed study of the given dataset should allow us to understand and manipulate the attributes in order to derive an appropriate correlation between them.
</h4>
"""

import pandas as pd
import numpy as np

"""<br>
<h2><b>Reading Data using Pandas</b></h2>

The pandas ```read_csv``` function reads the csv file in Python and pandas ```DataFrame``` method converts the file into a data frame as shown below. 


"""

df = pd.DataFrame(pd.read_csv('/content/train.csv'))
df.head()

df.shape

"""<br>
<h2><b>Description of attributes in the dataset</b></h2>


* PassengerId: Passenger Id
* Survived: Survival (0=No, 1=Yes)
* Pclass: Passenger class [1st, 2nd and 3rd]
* Name: Name
* Sex: Sex
* Age: Age
* SibSp: Number of siblings/ spouses aboard
* Parch: Number of parents/ children aboard
* Ticket: Ticket number
* Fare: (In British Pound)
* Cabin: Cabin
* Embarked: Port of Embarkation (C=Cherbourg, Q=Queenstown, S=Southampton)

<br>

## **Handling Null Values**

The dataset may contain rows or columns for which some values are missing. The ```isnull()``` method gives the count of these```NaN``` values.
"""

df.isnull().sum()

"""Inorder to fill the age of passengers that are not known, we return the mean of the values for the requested axis by using the ```fillna()``` and ```mean()```f functions."""

df.fillna(df.mean(), inplace = True)

"""Here we choose to replace the unknown embarkation ports with suitable places instead of eliminating them."""

df['Embarked'].fillna('S',inplace=True)

df.isnull().sum()

"""Since the column Cabin has more than 75% null values, it shall be dropped off. This will not affect the DataFrame as there is no relationship with the other attributes."""

df.drop(['Cabin'], axis = 1)

"""```corr()``` is used to represent the extent of association between pairs of variables in the given data.

"""

df.corr()

df['FamilySize'] = df['SibSp']+df['Parch']
df.drop(['SibSp', 'Parch'], axis = 1, inplace = True)
df.corr()

"""A new column, ```FamilySize``` has been created to know the total number of children, parents, spouses and siblings. It is determined that family size in the ship does not affect the survival of a person."""

df['Alone'] = [0 if df['FamilySize'][i]>0 else 1 for i in df.index]
df.head()

df.groupby(['Alone'])['Survived'].mean()

df[['Alone', 'Fare']].corr()

df['Sex'] = [0 if df['Sex'][i]=='male' else 1 for i in df.index]
df.groupby(['Sex'])['Survived'].mean()

df.groupby(['Embarked'])['Survived'].mean()

"""## **CONCLUSION**

* Passengers travelling with their family have higher chances of survival.
* Most of the survivors belonged to the high class. Such a hierarchy of saving passengers might have been followed.
* Female passengers were prioritized over men.
* Passengers who boarded the ship at Cherbourg, survived more in proportion than the others.
"""